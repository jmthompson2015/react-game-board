!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).ReactGameBoard=e()}(this,(function(){"use strict";const t=Math.PI/180,e=Math.cos(45*t),o=Math.sqrt(3),n=(t,e,o,n,i,r)=>(o-t)*(r-e)-(i-t)*(n-e);class i{constructor(t=!0,e=!0){this._isSquare=t,this._isFlat=e}get cornerCount(){return this.isSquare?4:6}get isFlat(){return this._isFlat}get isHexagon(){return!this._isSquare}get isPointy(){return!this._isFlat}get isSquare(){return this._isSquare}cellCorner(e,o,n){const i=this.isSquare?90:60,r=this.isSquare?.5:1;let s=0;this.isSquare&&this.isFlat&&(s=45),this.isHexagon&&this.isPointy&&(s=30);const a=t*(i*n-s);return{x:e.x+r*o*Math.cos(a),y:e.y+r*o*Math.sin(a)}}cellDimensions(t){let n,i;return this.isSquare&&this.isFlat?(n=2*e*t,i=2*e*t):this.isSquare&&this.isPointy?(n=2*t,i=2*t):this.isHexagon&&this.isFlat?(n=2*t,i=o*t):this.isHexagon&&this.isPointy&&(n=o*t,i=2*t),{w:n,h:i}}cellToPixel(t,n,i,r={x:0,y:0}){let s,a;return this.isSquare&&this.isFlat?(s=i*e*t,a=i*e*n):this.isSquare&&this.isPointy?(s=(i*t-i*n)/2,a=(i*t+i*n)/2):this.isHexagon&&this.isFlat?(s=i*(1.5*t),a=i*(o/2*t+o*n)):this.isHexagon&&this.isPointy&&(s=i*(o*t+o/2*n),a=i*(1.5*n)),{x:s+r.x,y:a+r.y}}computeCorners(t,e){const o=[];for(let n=0;n<this.cornerCount;n+=1){const i=this.cellCorner(t,e,n);o.push(i)}return o}}i.boundingBox=t=>{const e=R.map(R.prop("x"),t),o=R.map(R.prop("y"),t),n=Math.min(...e),i=Math.min(...o);return{x:n,y:i,width:Math.max(...e)-n,height:Math.max(...o)-i}},i.drawCell=(t,e,o,n)=>{const r=t;r.save(),r.lineJoin="miter",r.lineWidth=n,r.strokeStyle=o,i.enterPath(r,e),r.stroke(),r.restore()},i.drawCircularImage=(t,e,o)=>{const n=i.boundingBox(e),r=.9*Math.min(n.width,n.height),s=(n.width-r)/2,a=(n.height-r)/2;t.drawImage(o,n.x+s,n.y+a,r,r)},i.drawRectangularImage=(t,e,o)=>{const n=i.boundingBox(e);t.drawImage(o,n.x,n.y,n.width,n.height)},i.enterPath=(t,e)=>{t.beginPath(),t.moveTo(e[0].x,e[0].y);for(let o=1;o<e.length;o+=1)t.lineTo(e[o].x,e[o].y);t.closePath()},i.fillCell=(t,e,o)=>{const n=t;n.save(),i.enterPath(n,e),n.fillStyle=o,n.fill(),n.restore()},i.isPointInPolygon=(t,e,o)=>((t,e,o)=>{let i=0;const r=(t=>{const e=[];for(let o=0;o<t.length;o+=1){const n=t[o];e.push(n.x),e.push(n.y)}const o=t[0];return e.push(o.x),e.push(o.y),e})(o),s=r.length-2;for(let o=0;o<s;o+=2)r[o+1]<=e?r[o+3]>e&&n(r[o],r[o+1],r[o+2],r[o+3],t,e)>0&&(i+=1):r[o+3]<=e&&n(r[o],r[o+1],r[o+2],r[o+3],t,e)<0&&(i-=1);return i})(t,e,o)%2!=0;const r=(t,e)=>{const o=String.fromCodePoint("a".codePointAt(0)+t-1);return e<"a"||e>o},s=(t,e)=>e<1||e>t,a=(t,e)=>{const o=String.fromCodePoint("A".codePointAt(0)+t-1);return e<"A"||e>o},l=t=>null==t,u=(t,e)=>e<1||e>t;const c={createCube:({x:t=0,y:e=0,z:o=0}={})=>({x:t,y:e,z:o}),createDimension:({w:t=0,h:e=0}={})=>({w:t,h:e}),createHex:({q:t=0,r:e=0}={})=>({q:t,r:e}),createPoint:({x:t=0,y:e=0}={})=>({x:t,y:e})},h=[c.createCube({x:1,y:-1,z:0}),c.createCube({x:1,y:0,z:-1}),c.createCube({x:0,y:1,z:-1}),c.createCube({x:-1,y:1,z:0}),c.createCube({x:-1,y:0,z:1}),c.createCube({x:0,y:-1,z:1})],d=(t,e)=>c.createCube({x:t.x+e.x,y:t.y+e.y,z:t.z+e.z});c.axialToCube=t=>{const e=t.q,o=t.r,n=-e-o;return c.createCube({x:e,y:n,z:o})},c.cubeDirection=t=>h[t],c.cubeDistance=(t,e)=>(Math.abs(t.x-e.x)+Math.abs(t.y-e.y)+Math.abs(t.z-e.z))/2,c.cubeNeighbor=(t,e)=>d(t,c.cubeDirection(e)),c.cubeNeighbors=t=>R.reduce(((e,o)=>R.append(d(t,o),e)),[],h),c.cubeToAxial=t=>{const e=t.x,o=t.z;return c.createHex({q:e,r:o})},c.hexDistance=(t,e)=>{const o=c.axialToCube(t),n=c.axialToCube(e);return c.cubeDistance(o,n)},c.hexNeighbor=(t,e)=>{const o=c.axialToCube(t),n=c.cubeNeighbor(o,e);return c.cubeToAxial(n)},c.hexNeighbors=t=>{const e=c.axialToCube(t),o=c.cubeNeighbors(e);return R.map((t=>c.cubeToAxial(t)),o)};const C=t=>(e,o,n,i)=>{const r=t.cellDimensions(e),s={x:r.w/2+o.x,y:r.h/2+o.y};return t.cellToPixel(n,i,e,s)},g=(t,e)=>new Promise(((o,n)=>{const i=new Image;i.addEventListener("load",(()=>{e&&console.log(`Loaded image: ${t} ${i.width}x${i.height}`),o(i)})),i.addEventListener("error",(t=>n(t))),i.src=t}));class p extends React.PureComponent{constructor(t){super(t),this.state={imageMap:{},offset:{x:0,y:0},size:1},this.handleOnClick=this.handleOnClickFunction.bind(this)}componentDidMount(){this.loadImages(),this.computeSize(),this.paint()}componentDidUpdate(){this.paint()}computeSize(){const{boardCalculator:t,coordinateCalculator:e,gridLineWidth:o,height:n,isCellUsedFunction:i,width:r}=this.props,{cornerCount:s}=t,a={x:0,y:0};let l=Number.POSITIVE_INFINITY,u=Number.POSITIVE_INFINITY,c=Number.NEGATIVE_INFINITY,h=Number.NEGATIVE_INFINITY;for(let o=1;o<=e.rankCount;o+=1)for(let n=1;n<=e.fileCount;n+=1){if(i(e.fileRankToAN(n,o))){const e=C(t)(1,a,n-1,o-1);for(let o=0;o<s;o+=1){const n=t.cellCorner(e,1,o);l=Math.min(n.x,l),u=Math.min(n.y,u),c=Math.max(n.x,c),h=Math.max(n.y,h)}}}const d=c-l,g=h-u,p=(r-o)/d,f=(n-o)/g,y=Math.min(p,f),x={x:(r-y*d)/2-y*l,y:(n-y*g)/2-y*u};this.setState({size:y,offset:x})}handleOnClickFunction(t){const{boardCalculator:e,coordinateCalculator:o,isCellUsedFunction:n,onClick:r}=this.props,{offset:s,size:a}=this.state,l=t.currentTarget.getBoundingClientRect(),u={x:Math.round(t.clientX-l.left),y:Math.round(t.clientY-l.top)};let c=null;for(let t=1;!c&&t<=o.rankCount;t+=1)for(let r=1;!c&&r<=o.fileCount;r+=1){const l=o.fileRankToAN(r,t);if(n(l)){const o=C(e)(a,s,r-1,t-1),n=e.computeCorners(o,a);i.isPointInPolygon(u.x,u.y,n)&&(c=l)}}r(c)}loadImages(){const{images:t,isVerbose:e}=this.props;for(let o=0;o<t.length;o+=1)g(t[o],e).then((e=>{const{imageMap:n}=this.state;this.setState({imageMap:R.assoc(t[o],e,n)})}))}paint(){const{anToTokens:t,boardCalculator:e,cellColorFunction:o,cellImageFunction:n,coordinateCalculator:r,customKey:s,drawTokenFunction:a,gridColor:l,gridLineWidth:u,height:c,isCellUsedFunction:h,width:d}=this.props,{imageMap:g,offset:p,size:f}=this.state,y=document.getElementById(s).getContext("2d");y.clearRect(0,0,d,c),((t,e,o,n,r,s,a)=>(l,u,c)=>h=>{for(let d=1;d<=e.rankCount;d+=1)for(let g=1;g<=e.fileCount;g+=1){const p=e.fileRankToAN(g,d);if(a(p)){const e=C(t)(c,u,g-1,d-1),a=t.computeCorners(e,c),f=r(p);f&&i.fillCell(h,a,f);const y=s(p);if(y){const t=l[y];t&&i.drawRectangularImage(h,a,t)}i.drawCell(h,a,o,n)}}})(e,r,l,u,o,n,h)(g,p,f)(y),((t,e,o,n,i)=>(r,s,a)=>l=>{l.save();for(let u=1;u<=e.rankCount;u+=1)for(let c=1;c<=e.fileCount;c+=1){const h=e.fileRankToAN(c,u);if(n(h)){const e=i[h],n=C(t)(a,s,c-1,u-1);o(l,n,a,h,e,r)}}l.restore()})(e,r,a,h,t)(g,p,f)(y)}render(){const{backgroundColor:t,customKey:e,height:o,width:n}=this.props;return ReactDOMFactories.canvas({id:e,key:e,onClick:this.handleOnClick,style:{backgroundColor:t},width:n,height:o})}}return p.propTypes={anToTokens:PropTypes.shape().isRequired,boardCalculator:PropTypes.shape().isRequired,coordinateCalculator:PropTypes.shape().isRequired,drawTokenFunction:PropTypes.func.isRequired,backgroundColor:PropTypes.string,cellColorFunction:PropTypes.func,cellImageFunction:PropTypes.func,customKey:PropTypes.string,gridColor:PropTypes.string,gridLineWidth:PropTypes.number,height:PropTypes.number,images:PropTypes.arrayOf(PropTypes.string),isCellUsedFunction:PropTypes.func,isVerbose:PropTypes.bool,onClick:PropTypes.func,width:PropTypes.number},p.defaultProps={backgroundColor:"Gainsboro",cellColorFunction:()=>{},cellImageFunction:()=>{},customKey:"hexBoardCanvas",gridColor:"Black",gridLineWidth:1,height:480,images:[],isCellUsedFunction:()=>!0,isVerbose:!1,onClick:()=>{},width:640},p.BoardCalculator=i,p.CoordinateCalculator=class{constructor(t=8,e=8,o=1){this._fileCount=t,this._rankCount=e,this._levelCount=o}get fileCount(){return this._fileCount}get rankCount(){return this._rankCount}get levelCount(){return this._levelCount}anToFile(t){if(l(t))return null;const e=t.trim().charAt(0);return l(e)||r(this.fileCount,e)?null:e.codePointAt(0)-"a".codePointAt(0)+1}anToIndex(t){if(l(t))return null;const e=this.anToFile(t),o=this.anToRank(t),n=this.anToLevel(t);return l(e)||l(o)?null:l(n)?(o-1)*this.fileCount+(e-1):(n-1)*this.rankCount*this.fileCount+(o-1)*this.fileCount+(e-1)}anToLevel(t){if(l(t))return null;const e=t.trim(),o=e.charAt(e.length-1);return l(o)||a(this.levelCount,o)?null:o.codePointAt(0)-"A".codePointAt(0)+1}anToRank(t){if(l(t))return null;const e=parseInt(t.trim().substring(1),10);return u(this.rankCount,e)?null:e}fileRankToAN(t,e){if(s(this.fileCount,t)||u(this.rankCount,e))return null;const o=String.fromCodePoint("a".codePointAt(0)+t-1);return l(o)||r(this.fileCount,o)?null:`${o}${e}`}fileRankLevelToAN(t,e,o){if(s(this.fileCount,t)||u(this.rankCount,e)||((t,e)=>e<1||e>t)(this.levelCount,o))return null;const n=String.fromCodePoint("a".codePointAt(0)+t-1);if(l(n)||r(this.fileCount,n))return null;const i=String.fromCodePoint("A".codePointAt(0)+o-1);return l(i)||a(this.levelCount,i)?null:`${n}${e}${i}`}},p.HexBoardUtilities=c,p}));
